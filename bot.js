const { Telegraf, Markup } = require('telegraf');
const fs = require('fs');

// ржмржЯ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи
const BOT_TOKEN = '7550068111:AAERd5m6eOLOOqkrdNkavKL_NxWyS7R6qzg';
const GROUP_USERNAME = '@treder_squads'; // рждрзЛржорж╛рж░ ржЧрзНрж░рзБржк ржЗржЙржЬрж╛рж░ржирзЗржо
const ADMIN_ID = 6243881362;

const bot = new Telegraf(BOT_TOKEN);
const DB_FILE = 'users.json';
let users = {};

function loadUsers() {
  if (fs.existsSync(DB_FILE)) {
    users = JSON.parse(fs.readFileSync(DB_FILE));
  }
}
function saveUsers() {
  fs.writeFileSync(DB_FILE, JSON.stringify(users, null, 2));
}
loadUsers();

// ржорзЗржЗржи ржорзЗржирзБ
function mainMenu() {
  return Markup.inlineKeyboard([
    [Markup.button.callback('ЁЯСд ржкрзНрж░рзЛржлрж╛ржЗрж▓', 'profile')],
    [Markup.button.callback('ЁЯдЭ рж░рзЗржлрж╛рж░ ржХрж░рзБржи', 'refer')],
    [Markup.button.callback('ЁЯСе ржжрж▓рзАржпрж╝ рж╕ржжрж╕рзНржп', 'team')],
    [Markup.button.callback('ЁЯТб ржЙржкрж╛рж░рзНржЬржирзЗрж░ ржЯрж┐ржкрж╕', 'tips')],
    [Markup.button.callback('ЁЯТ╡ ржЯрж╛ржХрж╛ ржЙрждрзНрждрзЛрж▓ржи', 'withdraw')],
    [Markup.button.callback('ЁЯЫая╕П рж╕рж╛ржкрзЛрж░рзНржЯ', 'support')],
    [Markup.button.callback('ЁЯМР ржнрж╛рж╖рж╛ ржкрж░рж┐ржмрж░рзНрждржи', 'language')]
  ]);
}

// /start рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
bot.start(async (ctx) => {
  const userId = ctx.from.id;
  const userName = ctx.from.first_name;

  try {
    const member = await ctx.telegram.getChatMember(GROUP_USERNAME, userId);
    if (member.status === 'left') {
      return ctx.reply(`тЭЧ ржжржпрж╝рж╛ ржХрж░рзЗ ржкрзНрж░ржержорзЗ ржЧрзНрж░рзБржкрзЗ ржпрзЛржЧ ржжрж┐ржи:\n${GROUP_USERNAME}`);
    }
  } catch (e) {
    return ctx.reply('тЪая╕П ржЧрзНрж░рзБржк ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛ ржпрж╛ржЪрзНржЫрзЗ ржирж╛ред ржкрж░рзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред');
  }

  if (!users[userId]) {
    users[userId] = {
      id: userId,
      name: userName,
      balance: 0,
      joined: new Date().toLocaleString('bn-BD'),
      referBy: null,
      referredUsers: []
    };

    // рж░рзЗржлрж╛рж░рзЗрж▓ рж╕рж┐рж╕рзНржЯрзЗржо
    const args = ctx.message.text.split(' ');
    if (args[1]) {
      const refBy = parseInt(args[1]);
      if (refBy !== userId && users[refBy]) {
        users[userId].referBy = refBy;
        users[refBy].referredUsers.push(userId);
        users[refBy].balance += 50;
      }
    }

    saveUsers();
  }

  return ctx.reply(`ЁЯОЙ рж╕рзНржмрж╛ржЧрждржо ${userName}!`, mainMenu());
});

// ржмрж╛ржЯржи рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░ржЧрзБрж▓рзЛ ржЖржЧрзЗрж░ ржорждрзЛ
bot.action('profile', (ctx) => {
  const user = users[ctx.from.id];
  ctx.editMessageText(
    `ЁЯСд ржирж╛ржо: ${user.name}\nЁЯЖФ ржЖржЗржбрж┐: ${user.id}\nЁЯТ░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕: ${user.balance} BDT\nЁЯУЕ ржпрзЛржЧржжрж╛ржи: ${user.joined}`,
    mainMenu()
  );
});

bot.action('refer', (ctx) => {
  const user = users[ctx.from.id];
  ctx.editMessageText(
    `ЁЯдЭ рж░рзЗржлрж╛рж░ ржХрж░рзБржи ржПржмржВ ржЙржкрж╛рж░рзНржЬржи ржХрж░рзБржи!\n\nржЖржкржирж╛рж░ рж░рзЗржлрж╛рж░рзЗрж▓ рж▓рж┐ржВржХ:\nt.me/@Refer_Earningbd1_bot?start=${ctx.from.id}\n\nрж░рзЗржлрж╛рж░ рж╕ржВржЦрзНржпрж╛: ${user.referredUsers.length}\nржЙржкрж╛рж░рзНржЬрж┐ржд: ${user.referredUsers.length * 50} BDT`,
    mainMenu()
  );
});

bot.action('team', (ctx) => {
  const user = users[ctx.from.id];
  const teamList = user.referredUsers.map(uid => {
    const refUser = users[uid];
    return `- ${refUser.name} (${uid})`;
  }).join('\n') || 'ржХрзЛржиржУ рж╕ржжрж╕рзНржп ржирзЗржЗред';

  ctx.editMessageText(`ЁЯСе ржЖржкржирж╛рж░ ржжрж▓рзАржпрж╝ рж╕ржжрж╕рзНржп:\n${teamList}`, mainMenu());
});

bot.action('tips', (ctx) => {
  ctx.editMessageText(
    `ЁЯТб ржЙржкрж╛рж░рзНржЬржирзЗрж░ ржЯрж┐ржкрж╕:\n\n- ржлрзНрж░рж┐рж▓рзНржпрж╛ржирзНрж╕рж┐ржВ рж╢рзБрж░рзБ ржХрж░рзБржи\n- ржЗржЙржЯрж┐ржЙржм ржЪрзНржпрж╛ржирзЗрж▓ ржЦрзБрж▓рзБржи\n- ржЕрзНржпрж╛ржлрж┐рж▓рж┐ржпрж╝рзЗржЯ ржорж╛рж░рзНржХрзЗржЯрж┐ржВ ржХрж░рзБржи\n- Fiverr ржмрж╛ Upwork ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи`,
    mainMenu()
  );
});

bot.action('withdraw', (ctx) => {
  const user = users[ctx.from.id];
  if (user.balance < 1000) {
    ctx.editMessageText('ЁЯТ╕ ржЯрж╛ржХрж╛ ржЙрждрзНрждрзЛрж▓ржирзЗрж░ ржЬржирзНржп ржЕржирзНрждржд рззрзжрзжрзж BDT ржкрзНрж░ржпрж╝рзЛржЬржиред', mainMenu());
  } else {
    ctx.editMessageText('тЬЕ ржЖржкржирж╛рж░ ржЙрждрзНрждрзЛрж▓ржирзЗрж░ ржЕржирзБрж░рзЛржз ржЧрзНрж░рж╣ржг ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ! ржЕрзНржпрж╛ржбржорж┐ржи рж╢рзАржШрзНрж░ржЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░ржмрзЗржиред', mainMenu());
  }
});

bot.action('support', (ctx) => {
  ctx.editMessageText('ЁЯЫая╕П рж╕рж╛ржкрзЛрж░рзНржЯрзЗрж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи: @your_support_username', mainMenu());
});

bot.action('language', (ctx) => {
  ctx.editMessageText('ЁЯМР ржнрж╛рж╖рж╛ ржкрж░рж┐ржмрж░рзНрждржи рж╢рзАржШрзНрж░ржЗ ржЖрж╕ржЫрзЗ!', mainMenu());
});

// ржЕрзНржпрж╛ржбржорж┐ржи: ржорзЛржЯ ржЗржЙржЬрж╛рж░ рж╕ржВржЦрзНржпрж╛
bot.command('users', (ctx) => {
  if (ctx.from.id === ADMIN_ID) {
    const totalUsers = Object.keys(users).length;
    ctx.reply(`ЁЯСе ржорзЛржЯ ржЗржЙржЬрж╛рж░: ${totalUsers}`);
  }
});

bot.launch();
console.log('ЁЯдЦ ржмржЯ ржЪрж╛рж▓рзБ рж╣ржпрж╝рзЗржЫрзЗ...');
